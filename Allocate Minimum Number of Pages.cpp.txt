//{ Driver Code Starts
// Initial template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template in C++

class Solution 
{
    public:
    //Function to find minimum number of pages.
    bool feasible(int arr[], int n, int k, int ans)
    {
        int req=1, sum=0;
        for(int i=0; i<n; i++)
        {
            if(sum + arr[i] > ans)
            {
                req++;
                sum=arr[i];
            }
            else
            {
                sum += arr[i];
            }
        }
        return (req<=k);
    }
    int findPages(int arr[], int n, int k) 
    {
        if(n<k)
        {
            return -1;
        }
        int sum=0, mx=0;
        for(int i=0; i<n; i++)
        {
            sum += arr[i];
            mx = max(mx, arr[i]);
        }
        int low = mx, high=sum, res=0;
        while(low <= high)
        {
            int mid = (low+high)/2;
            if((feasible(arr, n, k, mid)))
            {
                res = mid;
               
                high = mid - 1;
            }
            else
            {
                low = mid + 1;
            }
        }
        
        return res;
    }
    
};

//{ Driver Code Starts.

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int A[n];
        for(int i=0;i<n;i++){
            cin>>A[i];
        }
        int m;
        cin>>m;
        Solution ob;
        cout << ob.findPages(A, n, m) << endl;
    }
    return 0;
}

// } Driver Code Ends