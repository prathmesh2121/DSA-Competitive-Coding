//	 love babbar

class Solution {
public:
    int callme(vector<int>& cost, vector<int>& dp, int n)
    {
        if(n == 0)
        {
            return cost[0];
        }
        if(n == 1)
        {
            return cost[1];
        }

        if(dp[n] != -1)
        {
            return dp[n];
        }

        dp[n] = cost[n] + ( min(callme(cost, dp, n-1), callme(cost,dp,n-2)) );
        return dp[n];
    }
    int minCostClimbingStairs(vector<int>& cost) 
    {
        int n=cost.size();
        vector<int> dp(n+1,-1);
        int ans =  min(callme(cost, dp, n-1),callme(cost, dp, n-2));    
        return ans;
    }
};