 long long int mod = 1000000007;
    long long int countP(long long int i, long long int j, int m, int n, vector<vector<long long int>> &dp) {
        if (i == m - 1 && j == n - 1) {
            return 1;
        }

        if (i >= m || j >= n) {
            return 0;
        }

        if (dp[i][j] != -1) {
            return dp[i][j];
        } else {
            long long int x = (countP(i + 1, j, m, n, dp) + countP(i, j + 1, m, n, dp));
            dp[i][j] = (x%mod);
            return dp[i][j];
        }
    }

    long long int numberOfPaths(int m, int n) {
        vector<vector<long long int>> dp(m+1, vector<long long int>(n+1, -1));
        long long int num = countP(0, 0, m, n, dp);
        return num;
    }