 int solve(int n, int x, vector<int> &dp)
	    {
	        n = n - x;
	        if(n == 0)
	        {
	            return 1; // possible way
	        }
	        if(n == -1)
	        {
	            return 0; // Incorrect way
	        }
	        if(dp[n] != -1) // It is already visited
	        {
	            return dp[n];
	        }
	        
	        int y = (solve(n , 1, dp) + solve(n , 2, dp)) % 1000000007; 
	        dp[n] = y;
	        return dp[n];
	    }
		int nthPoint(int n)
		{
		    if(n == 0)
		    {
		        return 1;
		    }
		    vector<int> dp(n+1, -1);
            int y = (solve(n , 1, dp) + solve(n , 2, dp)) % 1000000007;
            dp[n] = y;
            return dp[n];
		}